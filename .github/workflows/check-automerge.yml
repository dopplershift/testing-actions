name: Check Automerge

on:
  pull_request_target:

#permissions: write-all
#  pull-requests: write
permissions:
  actions: write
  checks: write
  contents: write
  # deployments: write
  issues: write
  # packages: write
  pull-requests: write
  # repository-projects: write
  # security-events: write
  # statuses: write

jobs:
  setautomerge:
    name: Set Automerge
    runs-on: ubuntu-latest
    if: github.actor == 'dopplershift'

    steps:
      - name: Check changed files
        id: checkpath
        uses: dorny/paths-filter@v2.10.1
        with:
          filters: |
            ci:
              - 'ci/**'
            project:
              - 'src/**'
              - 'tests/**'
              - 'docs/**'
            linting:
              - 'ci/linting_requirements.txt'
      - name: Set Automerge
        if: steps.checkpath.outputs.linting == 'true' && steps.checkpath.outputs.project == 'false'
        uses: actions/github-script@v4.0.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const query = `query GetPullRequestId($owner: String!, $repo: String!, $pullRequestNumber: Int!) {
              repository(owner: $owner, name: $repo) {
                pullRequest(number: $pullRequestNumber) {
                  id
                }
              }
            }`
            const params = {
                owner: context.repo.owner,
                repo: context.repo.repo,
                pullRequestNumber: context.payload.number
            };
            const id_resp = await github.graphql(query, params);
            console.log(id_resp);
            const merge_params = {
              pullRequestId: id_resp.repository.pullRequest.id,
              mergeMethod: 'MERGE'
            };
            const mutation_query = `mutation ($pullRequestId: ID!, $mergeMethod: PullRequestMergeMethod!) {
              enablePullRequestAutoMerge(input: {
                pullRequestId: $pullRequestId,
                mergeMethod: $mergeMethod
              }) {
                pullRequest {
                  autoMergeRequest {
                    enabledAt
                    enabledBy {
                      login
                    }
                  }
                }
              }
            }`
            const resp = await github.graphql(mutation_query, merge_params);
            console.log(resp.enablePullRequestAutoMerge.pullRequest.autoMergeRequest);

      - name: Approve PR
        if: steps.checkpath.outputs.linting == 'true' && steps.checkpath.outputs.project == 'false'
        uses: actions/github-script@v4.0.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const resp = await github.pulls.createReview({
                ...context.repo,
                pull_number: context.payload.number,
                event: 'APPROVE'
              });
            console.log(resp);