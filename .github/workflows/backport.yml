name: Backport

permissions:
 pull-requests: write

on:
  pull_request_target:
    # types:
    #   - closed
    #   - labeled

jobs:
  Backport:
    runs-on: ubuntu-latest
    # if: >
    #   github.event.pull_request.merged
    #   && (
    #     github.event.action == 'closed'
    #     || (
    #       github.event.action == 'labeled'
    #       && contains(github.event.label.name, 'backport')
    #     )
    #   )
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 100

      - name: Get backport branch
        id: get-branch
        run: |
          git fetch origin 'refs/heads/*.x:refs/remotes/origin/*.x'
          echo "::set-output name=backport-branch::$(git branch -r | grep 'v.*.x' | sort | tail -n 1 | cut -d / -f 2)"

      - name: Backport PR
        run: |
          git checkout -b ${{ steps.get-branch.outputs.backport-branch}} origin/${{ steps.get-branch.outputs.backport-branch}}
          git cherry-pick ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}

      - name: Comment on error
        if: failure()
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš¨ Unable to cleanly backport this PR! ðŸš¨'
            })