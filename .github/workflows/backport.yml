name: Backport

permissions:
  pull-requests: write
  contents: write

on:
  pull_request_target:
    # types:
    #   - closed
    #   - labeled

jobs:
  Backport:
    runs-on: ubuntu-latest
    # if: >
    #   github.event.pull_request.merged
    #   && (
    #     github.event.action == 'closed'
    #     || (
    #       github.event.action == 'labeled'
    #       && contains(github.event.label.name, 'backport')
    #     )
    #   )
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 100

      - name: Set up git
        run: |
          git config --global user.email github-actions[bot]@users.noreply.github.com
          git config --global user.name github-actions[bot]

      - name: Get backport branch
        id: get-branch
        run: |
          git fetch origin 'refs/heads/*.x:refs/remotes/origin/*.x'
          echo "::set-output name=backport-branch::$(git branch -r | grep 'v.*.x' | sort | tail -n 1 | cut -d / -f 2)"

      - name: Apply PR commits to ${{ steps.get-branch.outputs.backport-branch}} branch
        run: |
          git checkout -b ${{ steps.get-branch.outputs.backport-branch}} origin/${{ steps.get-branch.outputs.backport-branch}}
          git cherry-pick -x ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}

      - name: Create backport PR
        id: create-pr
        uses: peter-evans/create-pull-request@v4
        with:
          title: Backport #${{ github.event.number }}
          body: >
            Backport \#${{ github.event.number }} onto the
            ${{ steps.get-branch.outputs.backport-branch}} stable branch.
          base: ${{ steps.get-branch.outputs.backport-branch}}
          branch: backport-pr${{ github.event.number }}
          delete-branch: true

      - name: Comment on completion
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🏁 Successfully backported as #${{ steps.create-pr.outputs.pull-request-number }}. 🏁'
            })

      - name: Comment on error
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🚨 Unable to cleanly backport this PR! 🚨'
            })